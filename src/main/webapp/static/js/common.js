var setting = {	base: ctx,    defaultDateFormat: "yyyy-MM-dd",    defaultDateTimeFormat: "yyyy-MM-dd hh:mm:ss",	locale: "zh_CN",	currencyScale: "2",	currencyRoundType: "roundDown",	currencySign: "￥",	currencyUnit: "",	uploadImageExtension: "jpg,jpeg,bmp,gif,png,JPG,JPEG,BMP,GIF,PNG",	uploadFlashExtension: "swf,flv,SWF,FLV",	uploadMediaExtension: "swf,flv,mp3,wav,avi,rm,rmvb,SWF,FLV,MP3,WAV,AVI,RM,RMVB",	uploadFileExtension: "zip,rar,7z,doc,docx,xls,xlsx,ppt,pptx,ZIP,RAR,7Z,DOC,DOCX,XLS,XLSX,PPT,PPTX"};function currency(value, showSign, showUnit) {	if (value != null) {		var currency = formatMoney(value);		// if (setting.currencyRoundType == "roundHalfUp") {		// 	currency = (Math.round(value * Math.pow(10, setting.currencyScale)) / Math.pow(10, setting.currencyScale)).toFixed(setting.currencyScale);		// } else if (setting.currencyRoundType == "roundUp") {		// 	currency = (Math.ceil(value * Math.pow(10, setting.currencyScale)) / Math.pow(10, setting.currencyScale)).toFixed(setting.currencyScale);		// } else {		// 	currency = (Math.floor(value * Math.pow(10, setting.currencyScale)) / Math.pow(10, setting.currencyScale)).toFixed(setting.currencyScale);		// }		if (showSign) {			currency = setting.currencySign + currency;		}		if (showUnit) {			currency += setting.currencyUnit;		}		return currency;	}}function secrecy(type,value) {	if (type=='mobile'){		if (type==null||type==''){			return '';		}else {			return value.substring(0,3)+"******"+value.substring(9);		}	}}function split(value, sep) {	if (value == undefined || null == value || '' == value) {        return new Array();	}    return value.split(sep);}function formatMoney(value) {    //传参为空的处理    if (value == null || value == undefined || value == '') {        value = "0.00";        return value;    }    var value = String(value);    //把-号抽出    var head = "";    if (value < 0) {        head = value.substring(0, 1);        value = value.substring(1, value.length);    }    ;    //添加小数点后两位    var k = value.indexOf(".");    if (k < 0) value = value + ".00";    if (k != -1) {        value = Number(value).toFixed(2);    }    //加逗号    var j = value.indexOf(".");    var str = value.substring(0, j);    var le = value.length;    d = (parseInt(j) + parseInt(3));    var foot = value.substring(j, d);    var len = str.length, str2 = '', max = Math.floor(len / 3);    for (var i = 0; i < max; i++) {        var s = str.slice(len - 3, len);        if (len - 3 > 0) {            str = str.substr(0, len - 3);            str2 = (',' + s) + str2;            len = str.length;        }    }    str += str2;    //返回结果    var resut = head + str + foot;    return resut}/** * 获取当前月的第一天 */function getCurrentMonthFirst() {    var date = new Date();    date.setDate(1);    return date;}/** * 获取当前月的最后一天 */function getCurrentMonthLast() {    var date = new Date();    var currentMonth = date.getMonth();    var nextMonth = ++currentMonth;    var nextMonthFirstDay = new Date(date.getFullYear(), nextMonth, 1);    var oneDay = 1000 * 60 * 60 * 24;    return new Date(nextMonthFirstDay - oneDay);}function dateFormatter(value) {    if (value == null || value == '' || value == undefined) {        return '';    }    var dt;    if (value instanceof Date) {        dt = getDateForStringDate(value);    } else {        dt = new Date(getDateForStringDate(value));    }    return dt.format(setting.defaultDateFormat);}function datetimeFormatter(value, format) {    if (value == null || value == '' || value == undefined) {        return '';    }    var dt;    if (value instanceof Date) {        dt = getDateForStringDate(value);    } else {        dt = new Date(getDateForStringDate());    }    if (!format) {        format = setting.defaultDateTimeFormat;    }    return dt.format(format);}/** * 解决 ie，火狐浏览器不兼容new Date(s) * @param strDate * 返回 date对象 * add by zyf at 2015年11月5日 */function getDateForStringDate(strDate){    strDate = strDate.format("yyyy-MM-dd hh:mm:ss");    if (typeof strDate == "number") {        return strDate;    } else {        //切割年月日与时分秒称为数组        var s = strDate.split(" ");        var s1 = s[0].split("-");        var s2 = s[1].split(":");        if (s2.length == 2) {            s2.push("00");        }        return new Date(s1[0], s1[1] - 1, s1[2], s2[0], s2[1], s2[2]);    }}function setCookie(name, value) {	var expires = (arguments.length > 2) ? arguments[2] : null;	document.cookie = name + "=" + encodeURIComponent(value) + ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) + ";path=" + setting.base;}function getCookie(name) {	var value = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));	if (value != null) {		return decodeURIComponent(value[2]); 	} else {		return null;	}}function removeCookie(name) {	var expires = new Date();	expires.setTime(expires.getTime() - 1000 * 60);	setCookie(name, "", expires);}function floatAdd(arg1, arg2) {	var r1, r2, m;	try{		r1 = arg1.toString().split(".")[1].length;	} catch(e) {		r1 = 0;	}	try {		r2 = arg2.toString().split(".")[1].length;	} catch(e) {		r2 = 0;	}	m = Math.pow(10, Math.max(r1, r2));	return (arg1 * m + arg2 * m) / m;}function floatSub(arg1, arg2) {	var r1, r2, m, n;	try {		r1 = arg1.toString().split(".")[1].length;	} catch(e) {		r1 = 0;	}	try {		r2 = arg2.toString().split(".")[1].length;	} catch(e) {		r2 = 0;	}	m = Math.pow(10, Math.max(r1, r2));	n = (r1 >= r2) ? r1 : r2;	return ((arg1 * m - arg2 * m) / m).toFixed(n);}function floatMul(arg1, arg2) {	var m = 0, s1 = arg1.toString(), s2 = arg2.toString();	try {		m += s1.split(".")[1].length;	} catch(e) {}	try {		m += s2.split(".")[1].length;	} catch(e) {}	return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);}function floatDiv(arg1, arg2) {	var t1 = 0, t2 = 0, r1, r2;	try {		t1 = arg1.toString().split(".")[1].length;	} catch(e) {}	try {		t2 = arg2.toString().split(".")[1].length;	} catch(e) {}	with(Math) {		r1 = Number(arg1.toString().replace(".", ""));		r2 = Number(arg2.toString().replace(".", ""));		return (r1 / r2) * pow(10, t2 - t1);	}}$().ready(function() {	$disableButton = function(button, seconds) {		var previousValue = button.val();		var className = button.attr("disableClassName");		var promptValueSuffix = button.attr("disablePromptValueSuffix");		var promptValue = seconds + "秒" + promptValueSuffix;		button.prop("disabled", true);		button.addClass(className);		button.val(promptValue);		intervalId = window.setInterval(function() {			seconds -= 1;			promptValue = seconds + "秒" + promptValueSuffix;			button.val(promptValue);			if(seconds == 0) {				window.clearInterval(intervalId);				button.prop("disabled", false);				button.removeClass(className);				button.val(previousValue);			}		}, 1000);	};});function countdown(show, time, callback) {	time -= 1;	if (time == 0) {		if (callback && typeof callback === 'function') {			callback();		}		return;	}	// 每秒执行一次	$(show).text(time);	setTimeout("countdown(showTimer,"+time+","+ callback+")", 1000);}/** * js创建表单提交 * @param url * @param data */function createFormSubmit(url, data) {    var form = document.createElement("form");    document.body.appendChild(form);    form.method = 'post';    form.action = url;    form.target = '_self';    //创建隐藏表单    $.each(data, function (key, value) {        var element = document.createElement("input");        element.setAttribute("name", key);        element.setAttribute("value", value);        element.setAttribute("type","hidden");        form.appendChild(element);    });    form.submit();}(function($){    $.fn.extend({        "slideUp":function(value){            var docthis = this;            //默认参数            value=$.extend({                "li_h":"20",                "time":4000,                "movetime":2000            },value)            //向上滑动动画            function autoani(){                $("li:first",docthis).animate({"margin-top":-value.li_h},value.movetime,function(){                    $(this).css("margin-top",0).appendTo(".line");                })            }            //自动间隔时间向上滑动            var anifun = setInterval(autoani,value.time);            //悬停时停止滑动，离开时继续执行            $(docthis).children("li").hover(function(){                clearInterval(anifun);			//清除自动滑动动画            },function(){                anifun = setInterval(autoani,value.time);	//继续执行动画            })        }    })	// 获取用户信息	$.getJSON(ctx + '/getAssets', {}, function (result) {        if(result.data.assets!="--"){            $('#myAmount').text(result.data.assets);        }        if(result.data.avatar!=''){            $('#myAvatar').prop('src', result.data.avatar);        }        if(result.data.level==0){            $('#securityLevel').text('低');        }else if(result.data.level>=0 && result.data.level<=0.35){            $('#securityLevel').text('低');        }else if(result.data.level>=0.36 && result.data.level<=0.7){            $('#securityLevel').text('中');        }else if(result.data.level>=0.71 && result.data.level<=1){            $('#securityLevel').text('高');        }    })})(jQuery);