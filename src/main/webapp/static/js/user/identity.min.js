/* * Copyright 2016 klzan.com. All rights reserved. * Support: http://www.klzan.com * * JavaScript - Member Identity * Version: 3.0 */$().ready(function () {    var $identityForm = $("#identityForm"),        $submit = $identityForm.find(":submit");    var identityBox = $('#identityBox'), identityPer = $('#identityPer'), identityEps = $('#identityEps'),$type='GENERAL';    // $(":radio[name=type][value=ENTERPRISE]").prop("checked",true).trigger("change");    identityBox.html(identityPer.html());    $submit.prop("disabled", false);    $identityForm.validate({        rules: {            realName: {                required: true,                pattern: /^([\u4e00-\u9fa5]){2,7}$/                // pattern: /[\u4E00-\u9FA5]{2,7}/g            },            idNo: {                required: true,                pattern: /^([1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3})|([1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}(x|X)))$/,                remote: {                    url: ctx + "/uc/security/checkIdNo",                    type: "post",                    cache: false                }            }        },        messages: {            realName: {                required: "输入姓名",                pattern: "请输入2-7位中文姓名"            },            idNo: {                required: "请输入15-18位身份证号码",                pattern: "请输入正确的身份证号码",                remote: "身份证号码已存在"            }        },        errorPlacement: function (error, element) {            // element.tooltip('show', error.text());            layer.tips(error.text(), element, {                tipsMore: true            });        },        unhighlight: function (element) {            // element.tooltip('show', error.text());        },        submitHandler: function (form) {            $submit.prop("disabled", true);            var checkFlag = new clsIDCard($("#idNo").val());            console.log(checkFlag.IsValid());            if (!checkFlag.IsValid()) {                layer.tips("请输入正确的身份证号码", $("#idNo"), {                    tipsMore: true                });                $submit.prop("disabled", false);                return false;            }            form.submit();        }    });    if (userType == 'GENERAL') {        identityBox.html(identityPer.html());        // $("#corpName").rules("remove");        // $("#corpLicenseNo").rules("remove");    }    if (userType == 'ENTERPRISE') {        identityBox.html(identityEps.html());        $("#corpName").rules("add",{required:true,messages:{required: "输入企业名称"}});        $("#corpLicenseNo").rules("add",{required:true,messages:{required: "输入营业执照"}});    }    function clsIDCard(CardNo) {        this.Valid = false;        this.ID15 = '';        this.ID18 = '';        this.Local = '';        if (CardNo != null) this.SetCardNo(CardNo);    }    // 设置身份证号码，15位或者18位    clsIDCard.prototype.SetCardNo = function (CardNo) {        this.ID15 = '';        this.ID18 = '';        this.Local = '';        CardNo = CardNo.replace(" ", "");        var strCardNo;        if (CardNo.length == 18) {            pattern = /^\d{17}(\d|x|X)$/;            if (pattern.exec(CardNo) == null)return;            strCardNo = CardNo.toUpperCase();        } else {            pattern = /^\d{15}$/;            if (pattern.exec(CardNo) == null)return;            strCardNo = CardNo.substr(0, 6) + '19' + CardNo.substr(6, 9)            strCardNo += this.GetVCode(strCardNo);        }        this.Valid = this.CheckValid(strCardNo);    }    // 校验身份证有效性    clsIDCard.prototype.IsValid = function () {        return this.Valid;    }    // 返回生日字符串，格式如下，1981-10-10    clsIDCard.prototype.GetBirthDate = function () {        var BirthDate = '';        if (this.Valid) BirthDate = this.GetBirthYear() + '-' + this.GetBirthMonth() + '-' + this.GetBirthDay();        return BirthDate;    }    // 返回生日中的年，格式如下，1981    clsIDCard.prototype.GetBirthYear = function () {        var BirthYear = '';        if (this.Valid) BirthYear = this.ID18.substr(6, 4);        return BirthYear;    }    // 返回生日中的月，格式如下，10    clsIDCard.prototype.GetBirthMonth = function () {        var BirthMonth = '';        if (this.Valid) BirthMonth = this.ID18.substr(10, 2);        if (BirthMonth.charAt(0) == '0') BirthMonth = BirthMonth.charAt(1);        return BirthMonth;    }    // 返回生日中的日，格式如下，10    clsIDCard.prototype.GetBirthDay = function () {        var BirthDay = '';        if (this.Valid) BirthDay = this.ID18.substr(12, 2);        return BirthDay;    }    // 返回性别，1：男，0：女    clsIDCard.prototype.GetSex = function () {        var Sex = '';        if (this.Valid) Sex = this.ID18.charAt(16) % 2;        return Sex;    }    // 返回15位身份证号码    clsIDCard.prototype.Get15 = function () {        var ID15 = '';        if (this.Valid) ID15 = this.ID15;        return ID15;    }    // 返回18位身份证号码    clsIDCard.prototype.Get18 = function () {        var ID18 = '';        if (this.Valid) ID18 = this.ID18;        return ID18;    }    // 返回所在省，例如：上海市、浙江省    clsIDCard.prototype.GetLocal = function () {        var Local = '';        if (this.Valid) Local = this.Local;        return Local;    }    clsIDCard.prototype.GetVCode = function (CardNo17) {        var Wi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1);        var Ai = new Array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2');        var cardNoSum = 0;        for (var i = 0; i < CardNo17.length; i++)cardNoSum += CardNo17.charAt(i) * Wi[i];        var seq = cardNoSum % 11;        return Ai[seq];    }    clsIDCard.prototype.CheckValid = function (CardNo18) {        if (this.GetVCode(CardNo18.substr(0, 17)) != CardNo18.charAt(17))return false;        if (!this.IsDate(CardNo18.substr(6, 8)))return false;        var aCity = {            11: "北京",            12: "天津",            13: "河北",            14: "山西",            15: "内蒙古",            21: "辽宁",            22: "吉林",            23: "黑龙江 ",            31: "上海",            32: "江苏",            33: "浙江",            34: "安徽",            35: "福建",            36: "江西",            37: "山东",            41: "河南",            42: "湖北 ",            43: "湖南",            44: "广东",            45: "广西",            46: "海南",            50: "重庆",            51: "四川",            52: "贵州",            53: "云南",            54: "西藏 ",            61: "陕西",            62: "甘肃",            63: "青海",            64: "宁夏",            65: "新疆",            71: "台湾",            81: "香港",            82: "澳门",            91: "国外"        };        if (aCity[parseInt(CardNo18.substr(0, 2))] == null)return false;        this.ID18 = CardNo18;        this.ID15 = CardNo18.substr(0, 6) + CardNo18.substr(8, 9);        this.Local = aCity[parseInt(CardNo18.substr(0, 2))];        return true;    }    clsIDCard.prototype.IsDate = function (strDate) {        var r = strDate.match(/^(\d{1,4})(\d{1,2})(\d{1,2})$/);        if (r == null)return false;        var d = new Date(r[1], r[2] - 1, r[3]);        return (d.getFullYear() == r[1] && (d.getMonth() + 1) == r[2] && d.getDate() == r[3]);    }});