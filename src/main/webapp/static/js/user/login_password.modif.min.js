/* * Copyright 2016 klzan.com. All rights reserved. * Support: http://www.klzan.com * * JavaScript - Member LoginPassword Modif * Version: 3.0 */$().ready(function () {    var $loginPasswordModifForm = $("#loginPasswordModifForm"), $submit = $loginPasswordModifForm.find(":submit"),        rsaKey = new RSAKey();    var $currentPassword = $loginPasswordModifForm.find("[name='currentPassword']");    var $password = $loginPasswordModifForm.find("[name='password']"),        $rePassword = $loginPasswordModifForm.find("[name='rePassword']");    $submit.prop("disabled", false);    rsaKey.setPublic(b64tohex(modules), b64tohex(exponent));    $currentPassword.val("");    $password.val("");    $loginPasswordModifForm.validate({        rules: {            currentPassword: {                required: true,                // pattern: /^[^\s&\"<>]+$/,                minlength: 6,                maxlength: 18,                pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,18}$/            },            password: {                required: true,                // pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9a-zA-Z_]+$/,                minlength: 6,                maxlength: 18,                pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,18}$/,                notEqualTo: $currentPassword            },            rePassword: {                required: true,                equalTo: $password            }        },        messages: {            currentPassword: {                required: "请输入当前密码",                pattern: "密码必须是数字和字母的组合",                minlength: "请输入6-18位密码",                maxlength: "请输入6-18位密码"            },            password: {                required: "请输入新密码",                pattern: "密码必须是数字和字母的组合",                minlength: "请输入6-18位密码",                maxlength: "请输入6-18位密码",                notEqualTo: "不能与当前密码相同"            },            rePassword: {                required: "请输入确认密码",                equalTo: "两次密码输入不一致"            }        },        errorPlacement: function (error, element) {            // element.closest("li").find(".form-remark").text(error.text());            layer.tips(error.text(), element, {                tipsMore: true            });        },        unhighlight: function (element) {            // $(element).closest("li").find(".form-remark").text("");        },        submitHandler: function (form) {            $submit.prop("disabled", true);            $currentPassword.val(hex2b64(rsaKey.encrypt($currentPassword.val())));            $password.val(hex2b64(rsaKey.encrypt($password.val())));            form.submit();        }    });});