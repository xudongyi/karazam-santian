<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 扫描组件（扫描所有需要注入的组件） -->
    <context:component-scan base-package="com.klzan" use-default-filters="false">
        <!-- 例外 -->
        <!-- type：类型 -->
        <!-- expression：表达式 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <mvc:resources location="/static/" mapping="/static/**"/>
    <mvc:resources location="/robots.txt" mapping="/robots.txt"/>
    <mvc:resources location="/html/" mapping="/html/**"/>
    <!--<mvc:resources location="/mall/" mapping="/mall/**"/>-->
    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- PC端权限拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/uc/**" />
            <mvc:mapping path="/investment/*/verify" />
            <mvc:mapping path="/investment/*/invest" />
            <mvc:mapping path="/investment/coupon/**" />
            <bean class="com.klzan.p2p.interceptor.UserInterceptor" />
        </mvc:interceptor>
        <!-- 移动端令牌 拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/mobile/**" />
            <bean class="com.klzan.mobile.interceptor.TokenInterceptor" />
        </mvc:interceptor>
        <!-- 移动端UC权限 拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/mobile/uc/**" />
            <mvc:mapping path="/mobile/pay/**" />
            <bean class="com.klzan.mobile.interceptor.AuthInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- csrf CookieCsrfTokenRepository -->
    <bean class="com.klzan.core.web.csrf.CookieCsrfTokenRepository" />

    <!-- Spring csrf 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/login" />
            <bean class="com.klzan.core.web.csrf.CsrfInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean id="messageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="fastJsonConfig">
                    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                        <!-- 默认编码 -->
                        <property name="charset" value="UTF-8"/>
                        <!-- 日期格式化 -->
                        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
                        <!-- 序列化配置 -->
                        <property name="serializerFeatures">
                            <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                                <!-- 输出key时是否使用双引号,默认为true -->
                                <value>QuoteFieldNames</value>
                                <!-- 避免循环引用 -->
                                <value>DisableCircularReferenceDetect</value>
                                <!-- 是否输出值为null的字段 -->
                                <value>WriteMapNullValue</value>
                                <!-- 数值字段如果为null,输出为0,而非null -->
                                <value>WriteNullNumberAsZero</value>
                                <!-- 字符类型字段如果为null,输出为"",而非null -->
                                <value>WriteNullStringAsEmpty</value>
                                <!-- list字段如果为null,输出为[],而非null -->
                                <value>WriteNullListAsEmpty</value>
                                <!-- boolean字段如果为null,输出为false,而非null -->
                                <value>WriteNullBooleanAsFalse</value>
                                <!-- 设置使用文本方式输出日期，fastjson默认是long -->
                                <value>WriteDateUseDateFormat</value>
                                <!-- 兼容 IE6 -->
                                <value>BrowserCompatible</value>
                            </array>
                        </property>

                        <!-- SerializeFilter -->
                        <property name="serializeFilters">
                            <list>
                                <bean class="com.klzan.core.web.FastJsonValueFilter"/>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="com.klzan.p2p.bind.method.CurrentUserMethodArgumentResolver"></bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="objectMapper" ref="jacksonObjectMapper" />
    </bean>

    <beans profile="dev">
        <bean class="com.klzan.core.util.PropertiesUtils">
            <property name="locations">
                <list>
                    <value>classpath*:config/dev/site-config.propertites</value>
                    <value>classpath*:config/dev/site-template.propertites</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="test">
        <bean class="com.klzan.core.util.PropertiesUtils">
            <property name="locations">
                <list>
                    <value>classpath*:config/test/site-config.propertites</value>
                    <value>classpath*:config/test/site-template.propertites</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="prod">
        <bean class="com.klzan.core.util.PropertiesUtils">
            <property name="locations">
                <list>
                    <value>classpath*:config/prod/site-config.propertites</value>
                    <value>classpath*:config/prod/site-template.propertites</value>
                </list>
            </property>
        </bean>
    </beans>

</beans>